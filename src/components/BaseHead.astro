---
interface Props {
  title: string;
  description: string;
  image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = "/DPKLogocrop.webp" } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.ico" />
<meta name="generator" content={Astro.generator} />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Sitemap -->
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<!-- Preline CSS -->
<script>
  import "preline/dist/preline.js";
</script>
<script>
  // This code should be added to <head>.
  // It's used to prevent page load glitches.
  const html = document.querySelector('html');
  const isLightOrAuto = localStorage.getItem('hs_theme') === 'light' || (localStorage.getItem('hs_theme') === 'auto' && !window.matchMedia('(prefers-color-scheme: dark)').matches);
  const isDarkOrAuto = localStorage.getItem('hs_theme') === 'dark' || (localStorage.getItem('hs_theme') === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches);
  // @ts-ignore: Object is possibly 'null'.
  if (isLightOrAuto && html.classList.contains('dark')) html.classList.remove('dark');
  // @ts-ignore: Object is possibly 'null'.
  else if (isDarkOrAuto && html.classList.contains('light')) html.classList.remove('light');
  // @ts-ignore: Object is possibly 'null'.
  else if (isDarkOrAuto && !html.classList.contains('dark')) html.classList.add('dark');
  // @ts-ignore: Object is possibly 'null'.
  else if (isLightOrAuto && !html.classList.contains('light')) html.classList.add('light');
</script>
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-K7S6PTSSGZ">
</script>
<script>
  // Declare dataLayer as a global variable in the Window interface
  declare global {
    interface Window {
      dataLayer: any[];
    }
  }

  // Initialize dataLayer if it doesn't exist
  window.dataLayer = window.dataLayer || [];

  // Define the gtag function
  function gtag(...args: any[]) {
    window.dataLayer.push(...args);
  }
  
  gtag('js', new Date());

  gtag('config', 'G-K7S6PTSSGZ');
</script>
